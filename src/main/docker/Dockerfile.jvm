####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
# https://github.com/quarkusio/quarkus-quickstarts/blob/main/neo4j-quickstart/src/main/docker/Dockerfile.jvm
#
# Build the image with:
# docker build -f src/main/docker/Dockerfile.jvm -it quarkus-prototype-api-jvm .
#
# Then run the container using:
# docker run -i --rm -p 8080:8080 quarkus-prototype-api-jvm
####

# Builder
FROM registry.access.redhat.com/ubi8/openjdk-17:1.18 as builder

WORKDIR /work/

COPY .mvn/ ./.mvn/
COPY mvnw mvnw.cmd pom.xml ./
RUN ./mvnw dependency:resolve

COPY . .
RUN ./mvnw package


# Production Environments
FROM registry.access.redhat.com/ubi8/openjdk-17:1.18

ENV LANGUAGE='en_US:en'

COPY --from=builder --chown=185 /work/target/quarkus-app/lib/ /deployments/lib/
COPY --from=builder --chown=185 /work/target/quarkus-app/*.jar /deployments/
COPY --from=builder --chown=185 /work/target/quarkus-app/app/ /deployments/app/
COPY --from=builder --chown=185 /work/target/quarkus-app/quarkus/ /deployments/quarkus/

USER 185
EXPOSE 8080

ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]
